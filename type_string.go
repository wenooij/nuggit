// Code generated by "stringer -linecomment -type Type"; DO NOT EDIT.

package nuggit

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypeUndefined-0]
	_ = x[TypeBool-1]
	_ = x[TypeInt8-2]
	_ = x[TypeInt16-3]
	_ = x[TypeInt32-4]
	_ = x[TypeInt64-5]
	_ = x[TypeUint8-6]
	_ = x[TypeUint16-7]
	_ = x[TypeUint32-8]
	_ = x[TypeUint64-9]
	_ = x[TypeFloat32-10]
	_ = x[TypeFloat64-11]
	_ = x[TypeBytes-12]
	_ = x[TypeString-13]
}

const _Type_name = "boolint8int16int32int64uint8uint16uint32uint64float32float64bytesstring"

var _Type_index = [...]uint8{0, 0, 4, 8, 13, 18, 23, 28, 34, 40, 46, 53, 60, 65, 71}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
